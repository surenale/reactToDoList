{"ast":null,"code":"var _jsxFileName = \"/home/suren/reactYoutubePractice/todolist/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // useState hooks for handling the state of the input field\n  const [inputList, setInputList] = useState(\"buy apple\");\n\n  // creating empty array for storing the list using hooks\n  const [items, setItems] = useState([]);\n  const itemEvent = event => {\n    // updating the input field\n    setInputList(event.target.value);\n  };\n  const listOfItems = () => {\n    setItems(oldItems => {\n      return [...oldItems, inputList];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a Items\",\n          onChange: itemEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listOfItems,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children:\n          // map method is used for accesing the items of array \n          items.map(itemVal => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: itemVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"5Xp8tR06S3urqRjXvwsGPjh00fI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","inputList","setInputList","items","setItems","itemEvent","event","target","value","listOfItems","oldItems","map","itemVal"],"sources":["/home/suren/reactYoutubePractice/todolist/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n\n    // useState hooks for handling the state of the input field\n    const [inputList, setInputList] = useState(\"buy apple\");\n\n    // creating empty array for storing the list using hooks\n    const [items, setItems] = useState([]);\n\n    const itemEvent = (event) => {\n        // updating the input field\n        setInputList(event.target.value);\n    };\n\n    const listOfItems = () => {\n        setItems((oldItems)=>{\n            return [...oldItems,inputList];\n        })\n\n    }\n\n\n    return (\n        <>\n            <div className='main_div'>\n                <div className='center_div'>\n                    <br />\n                    <h1>ToDo List</h1>\n                    <input type=\"text\" placeholder='Add a Items' onChange={itemEvent} />\n                    <button onClick={listOfItems}> + </button>\n                    <ol>\n                        {/* <li>{inputList}</li> */}\n                        {\n                            // map method is used for accesing the items of array \n                            items.map((itemVal) => {\n                                return <li>{itemVal}</li>\n                            })\n                        }\n                    </ol>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAExC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEd;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,WAAW,CAAC;;EAEvD;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,SAAS,GAAIC,KAAK,IAAK;IACzB;IACAJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAG,MAAM;IACtBL,QAAQ,CAAEM,QAAQ,IAAG;MACjB,OAAO,CAAC,GAAGA,QAAQ,EAACT,SAAS,CAAC;IAClC,CAAC,CAAC;EAEN,CAAC;EAGD,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAClB;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,aAAa;UAAC,QAAQ,EAAEI;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eACpE;UAAQ,OAAO,EAAEI,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAC1C;UAAA;UAGQ;UACAN,KAAK,CAACQ,GAAG,CAAEC,OAAO,IAAK;YACnB,oBAAO;cAAA,UAAKA;YAAO;cAAA;cAAA;cAAA;YAAA,QAAM;UAC7B,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAEL;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACJ,iBACP;AAEX,CAAC;AAAC,GA1CIZ,GAAG;AAAA,KAAHA,GAAG;AA4CT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}