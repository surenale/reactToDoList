{"ast":null,"code":"var _jsxFileName = \"/home/suren/reactYoutubePractice/todolist/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoList from './ToDoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // useState hooks for handling the state of the input field\n  const [inputList, setInputList] = useState(\"\");\n\n  // creating empty array for storing the list using hooks\n  const [items, setItems] = useState([]);\n  const itemEvent = event => {\n    // updating the input field\n    setInputList(event.target.value);\n  };\n\n  // while onClicking the button \n  const listOfItems = () => {\n    // concatenating the old item in array and getting new item in array\n    setItems(oldItems => {\n      return [...oldItems, inputList];\n    });\n    // clearing the input field just clicking the add button\n    setInputList(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a Items\",\n          onChange: itemEvent,\n          value: inputList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listOfItems,\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children:\n          // map method is used for accesing the items of array \n          items.map(itemVal => {\n            /*#__PURE__*/_jsxDEV(ToDoList, {\n              text: itemVal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"C1GGje9cTLAVQF5sriN6y+QVr9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoList","App","inputList","setInputList","items","setItems","itemEvent","event","target","value","listOfItems","oldItems","map","itemVal"],"sources":["/home/suren/reactYoutubePractice/todolist/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ToDoList from './ToDoList';\n\nconst App = () => {\n\n    // useState hooks for handling the state of the input field\n    const [inputList, setInputList] = useState(\"\");\n\n    // creating empty array for storing the list using hooks\n    const [items, setItems] = useState([]);\n\n    const itemEvent = (event) => {\n        // updating the input field\n        setInputList(event.target.value);\n    };\n\n\n    // while onClicking the button \n    const listOfItems = () => {\n        // concatenating the old item in array and getting new item in array\n        setItems((oldItems) => {\n            return [...oldItems, inputList];\n        });\n        // clearing the input field just clicking the add button\n        setInputList(\"\");\n\n    }\n\n\n    return (\n        <>\n            <div className='main_div'>\n                <div className='center_div'>\n                    <br />\n                    <h1>ToDo List</h1>\n                    <input type=\"text\" placeholder='Add a Items' onChange={itemEvent}\n                        value={inputList} />\n                    <button onClick={listOfItems}> + </button>\n                    <ol>\n                        {/* <li>{inputList}</li> */}\n                        {\n                            // map method is used for accesing the items of array \n                            items.map((itemVal) => {\n                                <ToDoList\n                                    text={itemVal}\n                                />\n                            })\n                        }\n                    </ol>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAAA;AAElC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEd;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,SAAS,GAAIC,KAAK,IAAK;IACzB;IACAJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;;EAGD;EACA,MAAMC,WAAW,GAAG,MAAM;IACtB;IACAL,QAAQ,CAAEM,QAAQ,IAAK;MACnB,OAAO,CAAC,GAAGA,QAAQ,EAAET,SAAS,CAAC;IACnC,CAAC,CAAC;IACF;IACAC,YAAY,CAAC,EAAE,CAAC;EAEpB,CAAC;EAGD,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA;UAAA;UAAA;QAAA,QAAM,eACN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAClB;UAAO,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,aAAa;UAAC,QAAQ,EAAEG,SAAU;UAC7D,KAAK,EAAEJ;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eACxB;UAAQ,OAAO,EAAEQ,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAC1C;UAAA;UAGQ;UACAN,KAAK,CAACQ,GAAG,CAAEC,OAAO,IAAK;YACnB,qBAAC,QAAQ;cACL,IAAI,EAAEA;YAAQ;cAAA;cAAA;cAAA;YAAA,QAChB;UACN,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAEL;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACJ,iBACP;AAEX,CAAC;AAAC,GAlDIZ,GAAG;AAAA,KAAHA,GAAG;AAoDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}